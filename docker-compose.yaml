version: '3.8'
services:
  zookeeper:
    image: debezium/zookeeper:${DEBEZIUM_VERSION}
    ports:
     - 2181:2181
     - 2888:2888
     - 3888:3888
  kafka:
    image: debezium/kafka:${DEBEZIUM_VERSION}
    ports:
     - 9092:9092
    links:
     - zookeeper
    environment:
     - ZOOKEEPER_CONNECT=zookeeper:2181
  # Debezium's original Postgres image.
  #postgres:
    #image: debezium/example-postgres:${DEBEZIUM_VERSION}
    #ports:
     #- 5432:5432
    #environment:
     #- POSTGRES_USER=postgres
     #- POSTGRES_PASSWORD=postgres
  postgres:
    image: postgres:13.1-alpine
    ports:
     - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    command: postgres -c config_file=/etc/postgresql.conf
    volumes:
      - ./postgresql.conf:/etc/postgresql.conf
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
  connect:
    image: debezium/connect:${DEBEZIUM_VERSION}
    ports:
     - 8083:8083
    links:
     - kafka
     - postgres
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_connect_statuses
  node-kafka:
    build:
      context: ./node
      dockerfile: Dockerfile # Relative to context path.
    links:
    - kafka
  go-kafka:
    build:
      context: ./go
      dockerfile: Dockerfile # Relative to context path.
    links:
    - kafka
